= こんな合同誌に参加しました @rubys8arks

==== こんな合同誌に参加しました

 * 個人開発がやりたくなる本（#IndieCoderJP）※制作、記事の執筆
 * Onestop 合同誌を作ろう（親方Project）※記事の寄稿

==== 初めて合同誌を作って得たもの

今回、技術合同誌を作ってみて得られたスキルはこんなにあります！

　

@<b>{執筆者として}

 * ライティングスキル

 ブログ記事を書いていて1000〜3000文字の文章には慣れていたのですが、寄稿では初めて1万文字を書きました。
 長文でもすっきり読ませる文章力、構成力などが身についたと思います。

　

@<b>{編集者として}

 * 編集・校正スキル（他の寄稿者の文章の修正、アドバイス）
 * コピーライティングスキル（本のタイトルの作成、目次の作成）

 読者がパッと見て手にとってもらえるよう、よりキャッチーでわかりやすいものを作る方法を学びました。

　

@<b>{デザイナーとして}

 * グラフィックデザインスキル

 #IndieCoderJPのサークルカットの作成、本を紹介するブログ記事のアイキャッチ画像の作成、Twitterヘッダーの作成、執筆者紹介画像の作成などを行いました。
 本を手に取ってもらうために、いかに「わかりやすく伝えるか」を考えてデザインする能力が身についたと実感しています。

 * DTPデザインスキル（表紙の作成、アンケート集計結果ページの作成）

 手間がかかりすぎるので結局断念したのですが、グラフの作成用にAdobe Illsustratorを初めて使って勉強になりました。

　

@<b>{広報として}

 * セールスライティングスキル（本の紹介ページの作成）

 買いたい！と思ってもらえるよう、「本を読むことで何が得られるのか」「どんな困りごとを解決できるのか」にフォーカスして書きました。

 * WEBマーケティングスキル（SNSを利用した本の宣伝、いいねやRT・最終的な販売部数を伸ばす方法を考える）

 個人開発者のアカウントをいいねして回ったり、ネット上のインフルエンサーにRTされようとして失敗したりしました。

　

@<b>{アンケート作成・分析者として}

『個人開発がやりたくなる本』では、WEBアンケートを行って個人開発者141名の方から回答をいただきました。

 * 社会調査スキル（アンケートの設問作成や回答を集める方法の立案、Google Formによるアンケート実施）
 * データ加工スキル（Googleスプレッドシートによるアンケートの表記揺れ修正、集計、ワードクラウドの作成）
 * データ分析スキル（データからどんな傾向があるのかを把握）

　

@<b>{合同誌制作チームの一員として}

 * チームマネジメントスキル（プロジェクトにおける進行管理）
 * コミュニケーションスキル（初対面のメンバーとの、オンラインコミュニケーションによる共同作業）
 * タイムマネジメントスキル（本業と同人誌を作る時間のバランス）
 * タスク管理スキル（やるべきことをリストアップし、優先度に応じて取り組むスキル）
 * 技術同人誌の制作スキル（Re:view、Docker、Keynote、Adobe Illustrator、マークダウン記法など）

==== 困ったこと

 * 参加者間のモチベーションの差

 合同誌の参加メンバーの中には、「本が出るだけで嬉しい」と考える人と「本の完成度を高めたい、たくさんの人に届けたい」と考える人がいます。
 メンバー間のモチベーションに差があるので、「相談したい」と思ってもあまり反応がなかったのが悲しかったです。

 * オンラインコミュニケーションのみでプロジェクトを進めること

 Slackは既読がつかないので、読んだ上で反応がないのか、そもそも通知を切っていて見ていないのかよくわからないことに困りました。
 同人誌はあくまで仕事のスキマ時間で作るものなので、寄稿者のタスクは「原稿を完成させること」に絞ってあげるのがよいと学びました。
 最初に「本つくってみませんか？」と声をかけてくれた方が合同誌の作成に参加しなかったため、主催がウヤムヤなままプロジェクトが進んだことがかなり辛かったです。
 
 * 厳しい意見をどう言うべきか

 他の執筆者の書いた記事にどこまで介入すべきかが難しいと感じました。
 本の内容をよくするためには、それまで話したこともない初対面の方に対してアドバイスをしないといけないわけです。
 自分が「読みにくい」と感じた部分を直していったら人の原稿を大幅に変更することになってしまって、「こんなに変更してしまって大丈夫なのか？」と不安になりました。
 また、自分はグループの中で「唯一の女性、年齢も若い、エンジニア経験も浅い」と特に立場も弱かったので、どう振る舞えばチームを動かすことができるのか、とても悩みました。
 普段からエンジニア界隈に対して発信して、「この人はこんな人ですごい」と信頼されていればプロジェクトが進めやすくなるのかなと思います。

 * マークダウン記法

 ブログ記事はマークダウンで書いたことがあったのですが、Qiita、はてな、GitHubなどそれぞれで独自記法がありどれがRe:viewでも使えるのかよくわかりませんでした。
 PDFに出力してみないとどう表示されるかわからず、Re:viewの設定を担当している編集者の作業を待ってからでないと原稿を修正できなかったのが歯がゆかったです。

 * GitHubによる原稿管理

 マージし忘れやコンフリクトで原稿の修正がうまく反映されていなかったり、見ているブランチが違って編集長と執筆者で認識が食い違うということがありました。
 原稿の特定の部分について議論するときは、ブランチやGitファイルのリンクなどを参照しつつ進めるとよいかと思います。
 また、最新版の原稿が完成原稿に反映されているか、執筆者にチェックしてもらう期間を設けるのが大切だなと思いました。

==== 感想

 「同人誌」というと、まだまだ二次創作のイメージが強くあります。二次創作系合同誌を作るノウハウは知られていても、「技術系合同誌」を作るノウハウはまだまだ知られていません。
自分が合同誌を作る中でも、「技術系合同誌のノウハウがまとまった本があれば…」と思う瞬間が何度もありました。

@<b>{この本を手に取っているあなたはラッキーです！}

今回、自分が本を作っている中で得た学びをこの本に全て込めました。はちゃめちゃに辛いこともありましたが、少しでも自分の体験を役立てていただけたら、それが何よりの喜びです。